var documenterSearchIndex = {"docs":
[{"location":"#ActuaryUtilities.jl-1","page":"Home","title":"ActuaryUtilities.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"},{"location":"#","page":"Home","title":"Home","text":"DocTestSetup = quote\n    using ActuaryUtilities\n    using Dates\nend","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Modules = [ActuaryUtilities]","category":"page"},{"location":"#ActuaryUtilities.duration-Tuple{Dates.Date,Dates.Date}","page":"Home","title":"ActuaryUtilities.duration","text":"duration(Date,Date)\n\nCompute the duration given two dates, which is the number of years\nsince the first date. The interval `[0,1)` is defined as having \nduration `1`.\n\n\n\n\n\n","category":"method"},{"location":"#ActuaryUtilities.years_between","page":"Home","title":"ActuaryUtilities.years_between","text":"Years_Between(Date,Date)\n\nCompute the number of integer years between two dates, with the \nfirst date typically before the second. Will return negative number if\nfirst date is after the second. Use third argument to indicate if calendar \nannivesary should count as a full year.\n\nExamples\n\njulia> d1 = Date(2018,09,30);\n\njulia> d2 = Date(2019,09,30);\n\njulia> d3 = Date(2019,10,01);\n\njulia> years_between(d1,d3) \n1\njulia> years_between(d1,d2,false) # same month/day but `false` overlap\n0 \njulia> years_between(d1,d2) # same month/day but `true` overlap\n1 \njulia> years_between(d1,d2) # using default `true` overlap\n1 \n\n\n\n\n\n","category":"function"}]
}
